{"version":3,"sources":["scripts/main.js"],"names":["element","document","querySelector","child","children","money","salary","slice","split","join","sortList","list","sorted","sort","small","big","dataset","append","getEmployees","map","person","name","textContent"],"mappings":";AAAA,aAuBY,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EArBZ,IAAMA,EAAUC,SAASC,cAAc,MACjCC,EAAYH,EAAAA,EAAQI,UAEpBC,EAAQ,SAACC,GACb,OAACA,EAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAEnC,SAASC,EAASC,GACVC,IAAAA,EAASD,EAAKE,KAAK,SAACC,EAAOC,GAC/BV,OAAAA,EAAMU,EAAIC,QAAQV,QAAUD,EAAMS,EAAME,QAAQV,UAElDH,EAAMc,OAAOL,GAGf,SAASM,EAAaP,GACbA,OAAAA,EAAKQ,IAAI,SAAAC,GACXA,OAAAA,EAAAA,EAAAA,GAAAA,EAAOJ,SADU,GAAA,CAEpBK,KAAMD,EAAOE,gBAIjBZ,IACAQ","file":"main.529fd7e8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst element = document.querySelector('ul');\nconst child = [...element.children];\n\nconst money = (salary) =>\n  +salary.slice(1).split(',').join('');\n\nfunction sortList(list) {\n  const sorted = list.sort((small, big) =>\n    money(big.dataset.salary) - money(small.dataset.salary));\n\n  child.append(sorted);\n}\n\nfunction getEmployees(list) {\n  return list.map(person => ({\n    ...person.dataset,\n    name: person.textContent,\n  }));\n}\n\nsortList();\ngetEmployees();\n"]}